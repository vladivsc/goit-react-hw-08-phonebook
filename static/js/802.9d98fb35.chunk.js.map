{"version":3,"file":"static/js/802.9d98fb35.chunk.js","mappings":"8PAMA,EANqB,CACnBA,KAAM,GACNC,MAAO,GACPC,SAAU,I,wFC4FZ,EA9EyB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,GAAwBC,EAAAA,EAAAA,WAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8CC,EAAAA,EAAAA,GAAQ,CACpDC,aAAAA,EACAL,SAAAA,IAFMM,EAAR,EAAQA,MAAOC,EAAf,EAAeA,aAAcC,EAA7B,EAA6BA,aAOrBX,EAA0BS,EAA1BT,KAAMC,EAAoBQ,EAApBR,MAAOC,EAAaO,EAAbP,SAErB,OACE,UAAC,IAAD,CAAMU,GAAG,OAAOC,cAAc,SAASC,EAAE,OAAzC,WACE,SAAC,IAAD,CACEC,GAAG,OACHC,GAAG,OACHC,SAAU,CAAC,OAAQ,OAAQ,QAC3BC,WAAW,OAJb,gCAQA,kBAAMf,SAAUQ,EAAhB,WACE,UAAC,KAAD,CAAaK,GAAG,OAAOG,YAAU,EAAjC,WACE,SAAC,IAAD,oBACA,SAAC,EAAAC,EAAD,CACEC,KAAK,OACLrB,KAAK,OACLsB,MAAOtB,EACPuB,SAAUb,EACVc,QAAQ,yHACRC,YAAY,eAEd,SAAC,KAAD,CAAgBC,GAAG,IAAIC,QAAQ,MAA/B,6EAIF,UAAC,KAAD,CAAaX,GAAG,OAAOG,YAAU,EAAjC,WACE,SAAC,IAAD,qBACA,SAAC,EAAAC,EAAD,CACEC,KAAK,QACLrB,KAAK,QACLsB,MAAOrB,EACPsB,SAAUb,EACVc,QAAQ,wCACRC,YAAY,0BAGhB,UAAC,KAAD,CAAaT,GAAG,OAAOG,YAAU,EAAjC,WACE,SAAC,IAAD,wBACA,UAAC,IAAD,YACE,SAAC,EAAAC,EAAD,CACEpB,KAAK,WACLsB,MAAOpB,EACPqB,SAAUb,EACVkB,UAAU,IACVH,YAAY,WACZJ,KAAMhB,EAAO,OAAS,cAExB,SAAC,IAAD,CAAmBwB,MAAM,SAAzB,UACE,SAAC,IAAD,CAAQC,EAAE,UAAUC,KAAK,KAAKC,QApDtB,kBAAM1B,GAASD,EAAf,EAoDR,SACGA,EAAO,OAAS,eAIvB,SAAC,KAAD,CAAgBqB,GAAG,IAAIC,QAAQ,MAA/B,yDAIF,SAAC,IAAD,CAAMM,eAAe,SAArB,UACE,SAAC,IAAD,CAAQF,KAAK,KAAKG,YAAY,QAAQb,KAAK,SAA3C,2BAOT,ECxED,EAbyB,WACvB,IAAMc,GAAWC,EAAAA,EAAAA,MAOjB,OANgBC,EAAAA,EAAAA,IAAYC,EAAAA,KAMR,SAAC,KAAD,CAAUC,GAAG,eAE1B,SAAC,EAAD,CAAkBpC,SANJ,SAAAqC,GACnBL,GAASM,EAAAA,EAAAA,IAAOD,GACjB,GAKF,C,mECED,IAnBgB,SAAC,GAAgC,IAA9BhC,EAA6B,EAA7BA,aAAcL,EAAe,EAAfA,SAC/B,GAA0BC,EAAAA,EAAAA,WAAS,UAAKI,IAAxC,eAAOC,EAAP,KAAciC,EAAd,KAeA,MAAO,CAAEjC,MAAAA,EAAOiC,SAAAA,EAAUhC,aAbL,SAAC,GAAgB,IAAdiC,EAAa,EAAbA,OACtBD,GAAS,SAAAE,GACP,IAAQ5C,EAAgB2C,EAAhB3C,KAAMsB,EAAUqB,EAAVrB,MACd,OAAO,kBAAKsB,GAAZ,cAAwB5C,EAAOsB,GAChC,GACF,EAQuCX,aANnB,SAAAkC,GACnBA,EAAIC,iBACJ3C,GAAS,UAAKM,IACdiC,GAAS,UAAKlC,GACf,EAGF,C","sources":["components/RegistrationForm/initialState.js","components/RegistrationForm/RegistrationForm.jsx","components/Pages/RegistrationPage.jsx","components/hooks/useForm.js"],"sourcesContent":["const initialState = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport default initialState;\n","import { useState } from 'react';\n\nimport useForm from 'components/hooks/useForm';\n\nimport initialState from './initialState';\nimport {\n  FormControl,\n  FormLabel,\n  Input,\n  Button,\n  FormHelperText,\n  Flex,\n  Text,\n  InputRightElement,\n  InputGroup,\n} from '@chakra-ui/react';\n\nconst RegistrationForm = ({ onSubmit }) => {\n  const [show, setShow] = useState(false);\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n\n  const handleClick = () => setShow(!show);\n\n  const { name, email, password } = state;\n\n  return (\n    <Flex mt=\"20px\" flexDirection=\"column\" p=\"10px\">\n      <Text\n        mx=\"auto\"\n        mb=\"20px\"\n        fontSize={['22px', '26px', '28px']}\n        fontWeight=\"bold\"\n      >\n        Registration page\n      </Text>\n      <form onSubmit={handleSubmit}>\n        <FormControl mb=\"20px\" isRequired>\n          <FormLabel>Name</FormLabel>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            placeholder=\"User name\"\n          />\n          <FormHelperText as=\"p\" opacity=\"0.6\">\n            Name may contain only letters, apostrophe, dash and spaces.\n          </FormHelperText>\n        </FormControl>\n        <FormControl mb=\"20px\" isRequired>\n          <FormLabel>Email</FormLabel>\n          <Input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n            pattern=\"[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,}$\"\n            placeholder=\"example@gmail.com\"\n          />\n        </FormControl>\n        <FormControl mb=\"20px\" isRequired>\n          <FormLabel>Password</FormLabel>\n          <InputGroup>\n            <Input\n              name=\"password\"\n              value={password}\n              onChange={handleChange}\n              minLength=\"7\"\n              placeholder=\"Password\"\n              type={show ? 'text' : 'password'}\n            />\n            <InputRightElement width=\"4.5rem\">\n              <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n                {show ? 'Hide' : 'Show'}\n              </Button>\n            </InputRightElement>\n          </InputGroup>\n          <FormHelperText as=\"p\" opacity=\"0.6\">\n            Password must be at least 7 characters.\n          </FormHelperText>\n        </FormControl>\n        <Flex justifyContent=\"center\">\n          <Button size=\"sm\" colorScheme=\"green\" type=\"submit\">\n            Submit\n          </Button>\n        </Flex>\n      </form>\n    </Flex>\n  );\n};\n\nexport default RegistrationForm;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nimport { signup } from 'redux/auth/auth-operations';\nimport { isUserLogin } from 'redux/selectors';\n\nimport RegistrationForm from 'components/RegistrationForm/RegistrationForm';\n\nconst RegistrationPage = () => {\n  const dispatch = useDispatch();\n  const isLogin = useSelector(isUserLogin);\n\n  const handleSignup = data => {\n    dispatch(signup(data));\n  };\n\n  if (isLogin) return <Navigate to=\"/contacts\" />;\n\n  return <RegistrationForm onSubmit={handleSignup} />;\n};\n\nexport default RegistrationPage;\n","import { useState } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    setState(prevState => {\n      const { name, value } = target;\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n"],"names":["name","email","password","onSubmit","useState","show","setShow","useForm","initialState","state","handleChange","handleSubmit","mt","flexDirection","p","mx","mb","fontSize","fontWeight","isRequired","I","type","value","onChange","pattern","placeholder","as","opacity","minLength","width","h","size","onClick","justifyContent","colorScheme","dispatch","useDispatch","useSelector","isUserLogin","to","data","signup","setState","target","prevState","evt","preventDefault"],"sourceRoot":""}