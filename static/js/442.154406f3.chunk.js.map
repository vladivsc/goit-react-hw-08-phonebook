{"version":3,"file":"static/js/442.154406f3.chunk.js","mappings":"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","sources":["components/Phonebook/ContactList/ContactItem/ContactItem.jsx","components/Phonebook/ContactList/ContactList.jsx","components/Phonebook/ContactFilter/ContactFilter.jsx","components/Phonebook/ContactForm/initialState.js","components/Phonebook/ContactForm/ContactForm.jsx","components/Phonebook/Phonebook.jsx","../node_modules/@chakra-ui/form-control/dist/chunk-3HLJVDJ7.mjs","../node_modules/@chakra-ui/form-control/dist/chunk-PXXQR4UW.mjs","../node_modules/@chakra-ui/form-control/dist/chunk-JSSKUSQH.mjs","../node_modules/@chakra-ui/input/dist/chunk-GYFRIY2Z.mjs"],"sourcesContent":["import { useDispatch } from 'react-redux';\nimport { fetchDeleteContact } from 'redux/contacts/contacts-operations';\nimport { Button, Text, Flex } from '@chakra-ui/react';\n\nimport PropTypes from 'prop-types';\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Flex\n      p=\"10px\"\n      flexDirection=\"row\"\n      justifyContent=\"space-between\"\n      alignItems=\"center\"\n      variant=\"unstyled\"\n    >\n      <Text>\n        <b>{name}</b>: {number}\n      </Text>\n      <Flex mr=\"5px\">\n        <Button\n          colorScheme=\"red\"\n          onClick={() => dispatch(fetchDeleteContact(id))}\n        >\n          Delete\n        </Button>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default ContactItem;\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import { useSelector } from 'react-redux';\nimport { Text } from '@chakra-ui/react';\n\nimport { getContacts, getFilter } from 'redux/selectors';\nimport ContactItem from './ContactItem/ContactItem';\n\nconst ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  const getFilteredContacts = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const filterContacts = getFilteredContacts();\n\n  return (\n    <>\n      {contacts.length === 0 ? (\n        <Text textAlign=\"center\">\n          <b>Contacts list is empty!</b>\n        </Text>\n      ) : (\n        filterContacts.map(({ id, name, number }) => {\n          return <ContactItem key={id} id={id} name={name} number={number} />;\n        })\n      )}\n    </>\n  );\n};\n\nexport default ContactList;\n","import { useDispatch } from 'react-redux';\nimport { Flex, FormControl, FormLabel, Input } from '@chakra-ui/react';\n\nimport { setFilter } from 'redux/filter-contact/filter-slice';\n\nconst ContactFilter = () => {\n  const dispatch = useDispatch();\n\n  const changeFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n  return (\n    <Flex>\n      <FormControl mb=\"20px\" p=\"10px\">\n        <FormLabel>Find contacts by name:</FormLabel>\n        <Input\n          type=\"text\"\n          name=\"name\"\n          onChange={changeFilter}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          placeholder=\"User name\"\n        />\n      </FormControl>\n    </Flex>\n  );\n};\n\nexport default ContactFilter;\n","const initialState = {\n  name: \"\",\n  number: \"\"\n}\n\nexport default initialState;","import { useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { Flex, Button, FormControl, FormLabel, Input } from '@chakra-ui/react';\n\nimport {\n  fetchAllContacts,\n  fetchAddContact,\n} from 'redux/contacts/contacts-operations';\n\nimport initialState from './initialState';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchAllContacts());\n  }, [dispatch]);\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    return (initialState[name] = value);\n  };\n\n  const handleAddContact = data => {\n    dispatch(fetchAddContact(data));\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    handleAddContact({ ...initialState });\n    evt.target.reset();\n  };\n\n  return (\n    <Flex mt=\"20px\" flexDirection=\"column\" p=\"10px\">\n      <form onSubmit={handleSubmit}>\n        <FormControl mb=\"20px\" isRequired>\n          <FormLabel>Name</FormLabel>\n          <Input\n            type=\"text\"\n            name=\"name\"\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            placeholder=\"Name\"\n          />\n        </FormControl>\n        <FormControl mb=\"20px\" isRequired>\n          <FormLabel>Number</FormLabel>\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            placeholder=\"Number\"\n          />\n        </FormControl>\n        <Flex justifyContent=\"center\">\n          <Button colorScheme=\"whatsapp\" type=\"submit\">\n            Add contacts\n          </Button>\n        </Flex>\n      </form>\n    </Flex>\n  );\n};\n\nexport default ContactForm;\n","import ContactList from './ContactList/ContactList';\nimport ContactFilter from './ContactFilter/ContactFilter';\nimport ContactForm from './ContactForm/ContactForm';\n\nconst Phonebook = () => {\n  return (\n    <>\n      <ContactForm />\n      <ContactFilter />\n      <ContactList />\n    </>\n  );\n};\n\nexport default Phonebook;\n","import {\n  useFormControlContext,\n  useFormControlStyles\n} from \"./chunk-PXXQR4UW.mjs\";\n\n// src/form-label.tsx\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar FormLabel = forwardRef(function FormLabel2(passedProps, ref) {\n  var _a;\n  const styles = useStyleConfig(\"FormLabel\", passedProps);\n  const props = omitThemingProps(passedProps);\n  const {\n    className,\n    children,\n    requiredIndicator = /* @__PURE__ */ jsx(RequiredIndicator, {}),\n    optionalIndicator = null,\n    ...rest\n  } = props;\n  const field = useFormControlContext();\n  const ownProps = (_a = field == null ? void 0 : field.getLabelProps(rest, ref)) != null ? _a : { ref, ...rest };\n  return /* @__PURE__ */ jsxs(\n    chakra.label,\n    {\n      ...ownProps,\n      className: cx(\"chakra-form__label\", props.className),\n      __css: {\n        display: \"block\",\n        textAlign: \"start\",\n        ...styles\n      },\n      children: [\n        children,\n        (field == null ? void 0 : field.isRequired) ? requiredIndicator : optionalIndicator\n      ]\n    }\n  );\n});\nFormLabel.displayName = \"FormLabel\";\nvar RequiredIndicator = forwardRef(\n  function RequiredIndicator2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    if (!(field == null ? void 0 : field.isRequired))\n      return null;\n    const className = cx(\"chakra-form__required-indicator\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.span,\n      {\n        ...field == null ? void 0 : field.getRequiredIndicatorProps(props, ref),\n        __css: styles.requiredIndicator,\n        className\n      }\n    );\n  }\n);\nRequiredIndicator.displayName = \"RequiredIndicator\";\n\nexport {\n  FormLabel,\n  RequiredIndicator\n};\n","// src/form-control.tsx\nimport { createContext } from \"@chakra-ui/react-context\";\nimport { mergeRefs } from \"@chakra-ui/react-use-merge-refs\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx, dataAttr } from \"@chakra-ui/shared-utils\";\nimport { useCallback, useId, useState } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar [FormControlStylesProvider, useFormControlStyles] = createContext({\n  name: `FormControlStylesContext`,\n  errorMessage: `useFormControlStyles returned is 'undefined'. Seems you forgot to wrap the components in \"<FormControl />\" `\n});\nvar [FormControlProvider, useFormControlContext] = createContext({\n  strict: false,\n  name: \"FormControlContext\"\n});\nfunction useFormControlProvider(props) {\n  const {\n    id: idProp,\n    isRequired,\n    isInvalid,\n    isDisabled,\n    isReadOnly,\n    ...htmlProps\n  } = props;\n  const uuid = useId();\n  const id = idProp || `field-${uuid}`;\n  const labelId = `${id}-label`;\n  const feedbackId = `${id}-feedback`;\n  const helpTextId = `${id}-helptext`;\n  const [hasFeedbackText, setHasFeedbackText] = useState(false);\n  const [hasHelpText, setHasHelpText] = useState(false);\n  const [isFocused, setFocus] = useState(false);\n  const getHelpTextProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: helpTextId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasHelpText(true);\n      })\n    }),\n    [helpTextId]\n  );\n  const getLabelProps = useCallback(\n    (props2 = {}, forwardedRef = null) => {\n      var _a, _b;\n      return {\n        ...props2,\n        ref: forwardedRef,\n        \"data-focus\": dataAttr(isFocused),\n        \"data-disabled\": dataAttr(isDisabled),\n        \"data-invalid\": dataAttr(isInvalid),\n        \"data-readonly\": dataAttr(isReadOnly),\n        id: (_a = props2.id) != null ? _a : labelId,\n        htmlFor: (_b = props2.htmlFor) != null ? _b : id\n      };\n    },\n    [id, isDisabled, isFocused, isInvalid, isReadOnly, labelId]\n  );\n  const getErrorMessageProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      id: feedbackId,\n      ...props2,\n      ref: mergeRefs(forwardedRef, (node) => {\n        if (!node)\n          return;\n        setHasFeedbackText(true);\n      }),\n      \"aria-live\": \"polite\"\n    }),\n    [feedbackId]\n  );\n  const getRootProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ...htmlProps,\n      ref: forwardedRef,\n      role: \"group\"\n    }),\n    [htmlProps]\n  );\n  const getRequiredIndicatorProps = useCallback(\n    (props2 = {}, forwardedRef = null) => ({\n      ...props2,\n      ref: forwardedRef,\n      role: \"presentation\",\n      \"aria-hidden\": true,\n      children: props2.children || \"*\"\n    }),\n    []\n  );\n  return {\n    isRequired: !!isRequired,\n    isInvalid: !!isInvalid,\n    isReadOnly: !!isReadOnly,\n    isDisabled: !!isDisabled,\n    isFocused: !!isFocused,\n    onFocus: () => setFocus(true),\n    onBlur: () => setFocus(false),\n    hasFeedbackText,\n    setHasFeedbackText,\n    hasHelpText,\n    setHasHelpText,\n    id,\n    labelId,\n    feedbackId,\n    helpTextId,\n    htmlProps,\n    getHelpTextProps,\n    getErrorMessageProps,\n    getRootProps,\n    getLabelProps,\n    getRequiredIndicatorProps\n  };\n}\nvar FormControl = forwardRef(\n  function FormControl2(props, ref) {\n    const styles = useMultiStyleConfig(\"Form\", props);\n    const ownProps = omitThemingProps(props);\n    const {\n      getRootProps,\n      htmlProps: _,\n      ...context\n    } = useFormControlProvider(ownProps);\n    const className = cx(\"chakra-form-control\", props.className);\n    return /* @__PURE__ */ jsx(FormControlProvider, { value: context, children: /* @__PURE__ */ jsx(FormControlStylesProvider, { value: styles, children: /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...getRootProps({}, ref),\n        className,\n        __css: styles[\"container\"]\n      }\n    ) }) });\n  }\n);\nFormControl.displayName = \"FormControl\";\nvar FormHelperText = forwardRef(\n  function FormHelperText2(props, ref) {\n    const field = useFormControlContext();\n    const styles = useFormControlStyles();\n    const className = cx(\"chakra-form__helper-text\", props.className);\n    return /* @__PURE__ */ jsx(\n      chakra.div,\n      {\n        ...field == null ? void 0 : field.getHelpTextProps(props, ref),\n        __css: styles.helperText,\n        className\n      }\n    );\n  }\n);\nFormHelperText.displayName = \"FormHelperText\";\n\nexport {\n  useFormControlStyles,\n  useFormControlContext,\n  FormControl,\n  FormHelperText\n};\n","import {\n  useFormControlContext\n} from \"./chunk-PXXQR4UW.mjs\";\n\n// src/use-form-control.ts\nimport { ariaAttr, callAllHandlers } from \"@chakra-ui/shared-utils\";\nfunction useFormControl(props) {\n  const { isDisabled, isInvalid, isReadOnly, isRequired, ...rest } = useFormControlProps(props);\n  return {\n    ...rest,\n    disabled: isDisabled,\n    readOnly: isReadOnly,\n    required: isRequired,\n    \"aria-invalid\": ariaAttr(isInvalid),\n    \"aria-required\": ariaAttr(isRequired),\n    \"aria-readonly\": ariaAttr(isReadOnly)\n  };\n}\nfunction useFormControlProps(props) {\n  var _a, _b, _c;\n  const field = useFormControlContext();\n  const {\n    id,\n    disabled,\n    readOnly,\n    required,\n    isRequired,\n    isInvalid,\n    isReadOnly,\n    isDisabled,\n    onFocus,\n    onBlur,\n    ...rest\n  } = props;\n  const labelIds = props[\"aria-describedby\"] ? [props[\"aria-describedby\"]] : [];\n  if ((field == null ? void 0 : field.hasFeedbackText) && (field == null ? void 0 : field.isInvalid)) {\n    labelIds.push(field.feedbackId);\n  }\n  if (field == null ? void 0 : field.hasHelpText) {\n    labelIds.push(field.helpTextId);\n  }\n  return {\n    ...rest,\n    \"aria-describedby\": labelIds.join(\" \") || void 0,\n    id: id != null ? id : field == null ? void 0 : field.id,\n    isDisabled: (_a = disabled != null ? disabled : isDisabled) != null ? _a : field == null ? void 0 : field.isDisabled,\n    isReadOnly: (_b = readOnly != null ? readOnly : isReadOnly) != null ? _b : field == null ? void 0 : field.isReadOnly,\n    isRequired: (_c = required != null ? required : isRequired) != null ? _c : field == null ? void 0 : field.isRequired,\n    isInvalid: isInvalid != null ? isInvalid : field == null ? void 0 : field.isInvalid,\n    onFocus: callAllHandlers(field == null ? void 0 : field.onFocus, onFocus),\n    onBlur: callAllHandlers(field == null ? void 0 : field.onBlur, onBlur)\n  };\n}\n\nexport {\n  useFormControl,\n  useFormControlProps\n};\n","// src/input.tsx\nimport { useFormControl } from \"@chakra-ui/form-control\";\nimport {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  useMultiStyleConfig\n} from \"@chakra-ui/system\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { jsx } from \"react/jsx-runtime\";\nvar Input = forwardRef(function Input2(props, ref) {\n  const { htmlSize, ...rest } = props;\n  const styles = useMultiStyleConfig(\"Input\", rest);\n  const ownProps = omitThemingProps(rest);\n  const input = useFormControl(ownProps);\n  const _className = cx(\"chakra-input\", props.className);\n  return /* @__PURE__ */ jsx(\n    chakra.input,\n    {\n      size: htmlSize,\n      ...input,\n      __css: styles.field,\n      ref,\n      className: _className\n    }\n  );\n});\nInput.displayName = \"Input\";\nInput.id = \"Input\";\n\nexport {\n  Input\n};\n"],"names":["id","name","number","dispatch","useDispatch","p","flexDirection","justifyContent","alignItems","variant","mr","colorScheme","onClick","fetchDeleteContact","contacts","useSelector","getContacts","filter","getFilter","filterContacts","contact","toLowerCase","includes","length","textAlign","map","mb","I","type","onChange","target","setFilter","value","pattern","placeholder","useEffect","fetchAllContacts","handleChange","initialState","mt","onSubmit","evt","data","preventDefault","fetchAddContact","reset","isRequired","FormLabel","forwardRef","passedProps","ref","_a","styles","useStyleConfig","props","omitThemingProps","children","className","requiredIndicator","jsx","RequiredIndicator","optionalIndicator","rest","field","useFormControlContext","ownProps","getLabelProps","jsxs","chakra","cx","__css","display","displayName","useFormControlStyles","getRequiredIndicatorProps","createContext","errorMessage","FormControlStylesProvider","strict","FormControlProvider","FormControl","useMultiStyleConfig","idProp","isInvalid","isDisabled","isReadOnly","htmlProps","uuid","useId","labelId","feedbackId","helpTextId","useState","hasFeedbackText","setHasFeedbackText","hasHelpText","setHasHelpText","isFocused","setFocus","getHelpTextProps","useCallback","props2","forwardedRef","mergeRefs","node","_b","dataAttr","htmlFor","getErrorMessageProps","getRootProps","role","onFocus","onBlur","useFormControlProvider","context","FormHelperText","helperText","useFormControl","_c","disabled","readOnly","required","labelIds","push","join","callAllHandlers","useFormControlProps","ariaAttr","Input","htmlSize","input","_className","size"],"sourceRoot":""}