{"version":3,"file":"static/js/248.8a4ef261.chunk.js","mappings":"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","sources":["components/RegistrationForm/fields.js","components/RegistrationForm/initialState.js","components/RegistrationForm/RegistrationForm.jsx","components/Pages/RegistrationPage.jsx","components/hooks/useForm.js","components/shared/Button/Button.jsx","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","components/shared/TextField/TextField.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["const fields = {\n  name: {\n    type: 'text',\n    name: 'name',\n    required: true,\n    label: 'User name',\n    pattern: \"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\",\n    title:\n      \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n  },\n  email: {\n    type: 'email',\n    name: 'email',\n    required: true,\n    label: 'User email',\n    pattern: '[a-z0-9._%+-]+@[a-z0-9.-]+.[a-z]{2,}$',\n  },\n  password: {\n    type: 'password',\n    name: 'password',\n    required: true,\n    label: 'User password',\n    minLength: '7',\n  },\n};\n\nexport default fields;\n","const initialState = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport default initialState;\n","import useForm from 'components/hooks/useForm';\n\nimport TextField from 'components/shared/TextField/TextField';\nimport Button from 'components/shared/Button/Button';\nimport fields from './fields';\n\nimport initialState from './initialState';\n\nconst RegistrationForm = ({ onSubmit }) => {\n  const { state, handleChange, handleSubmit } = useForm({\n    initialState,\n    onSubmit,\n  });\n\n  const { name, email, password } = state;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <TextField value={name} handleChange={handleChange} {...fields.name} />\n      <TextField value={email} handleChange={handleChange} {...fields.email} />\n      <TextField\n        value={password}\n        handleChange={handleChange}\n        {...fields.password}\n      />\n      <Button>Registry</Button>\n    </form>\n  );\n};\n\nexport default RegistrationForm;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\nimport { signup } from 'redux/auth/auth-operations';\nimport { isUserLogin } from 'redux/selectors';\n\nimport RegistrationForm from 'components/RegistrationForm/RegistrationForm';\n\nconst RegistrationPage = () => {\n  const dispatch = useDispatch();\n  const isLogin = useSelector(isUserLogin);\n\n  const handleSignup = data => {\n    dispatch(signup(data));\n  };\n\n  if (isLogin) return <Navigate to=\"/contacts\" />;\n\n  return (\n    <div>\n      <h1>Registration page</h1>\n      <RegistrationForm onSubmit={handleSignup} />\n    </div>\n  );\n};\n\nexport default RegistrationPage;\n","import { useState } from 'react';\n\nconst useForm = ({ initialState, onSubmit }) => {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = ({ target }) => {\n    setState(prevState => {\n      const { name, value } = target;\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  return { state, setState, handleChange, handleSubmit };\n};\n\nexport default useForm;\n","const Button = ({ children, type = 'submit' }) => {\n  return <button type={type}>{children}</button>;\n};\n\nexport default Button;\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import { useMemo } from 'react';\n\nimport { nanoid } from 'nanoid';\n\nconst TextField = ({ label, handleChange, ...props }) => {\n  const id = useMemo(() => nanoid(), []);\n  return (\n    <div>\n      <label htmlFor={id}>{label}</label>\n      <input id={id} onChange={handleChange} {...props} />\n    </div>\n  );\n};\n\nexport default TextField;\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["name","type","required","label","pattern","title","email","password","minLength","onSubmit","useForm","initialState","state","handleChange","handleSubmit","TextField","value","fields","Button","dispatch","useDispatch","useSelector","isUserLogin","to","data","signup","useState","setState","target","prevState","evt","preventDefault","children","_objectWithoutProperties","source","excluded","key","i","sourceKeys","Object","keys","length","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","props","id","useMemo","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","htmlFor","onChange"],"sourceRoot":""}